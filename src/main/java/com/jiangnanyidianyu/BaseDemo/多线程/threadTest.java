package com.jiangnanyidianyu.BaseDemo.多线程;

import org.junit.Test;

/**
 * @Description TODO
 * @Author Qinnn丶
 * @Date 2021/7/3 15:51
 **/
public class threadTest {
    /*
    *   程序: 为了完成特点任务、用某种语言编写的一组指令的集合,即指一段静态的代码,静态对象
    *
    *   进程: 是程序的一次执行过程,或是正在运行的一个程序.是一个动态的过程:有它自己的产生、存在和消亡的过程 ----
    *        [进程作为资源分配的单位]
    *
    *   线程: 进程可进一步细化为线程,是一个程序内部的一条执行路径.
    *       --> 若一个进程同一时间并行执行多个线程,就是支持多线程的
    *       --> [线程作为调度和执行单位,每个线程拥有独立的运行栈和程序计数器(pc)]线程切换的开销小]
    *       --> 一个进程中的多个线程共享相同的内存单元/内存地址空间 ----> 它们从同一堆中分配对象,可以访问相同的变量和对象.这就使得线程间通信更简便、高效.
    *           单多个线程操作共享的系统资源可能就会带来安全的隐患
    *
    *   一个java应用程序,至少有三个线程:main()主线程,gc()垃圾回收线程,异常处理线程.
    *
    *   并行:多个CPU同时执行多个任务.比如:多个人同时做不同的事
    *   并发:一个CPU(采用时间片)同时执行多个任务.比如:秒杀,多个人做同一件事
    * */

    @Test
    public void ThreadTest(){

    }


}
